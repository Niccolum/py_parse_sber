name: release

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:

  static-analysis:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python -m pip install -e .[static_analysis]

      - name: Run static analysis
        run: |
          flake8

  vulnerability-check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python -m pip install -e .[vulnerability_check]

      - name: Run vulnerability check
        run: |
          bandit -r py_parser_sber

  functional-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python -m pip install -e .
          python -m pip install -r tests/mock_server/requirements.txt
          sudo apt-get update
          sudo apt-get install docker docker-compose

      - name: Run test
        run: |
          echo "LOGIN=${{ secrets.SBER_USERNAME }}" >> .env
          echo "PASSWORD=${{ secrets.SBER_PASSWORD }}" >> .env
          echo "SERVER_URL=localhost" >> .env
          echo "SERVER_SCHEME=http" >> .env
          echo "SERVER_PORT=8080" >> .env
          echo "SEND_ACCOUNT_URL=/send_account" >> .env
          echo "SEND_PAYMENT_URL=/send_payment" >> .env
          echo "DAYS=1" >> .env
          docker-compose up --build --abort-on-container-exit --exit-code-from py_parse_sber

  python-publish:
    needs: [static-analysis, vulnerability-check, functional-tests]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Bump version and push tag
        id: new_tag
        uses: anothrNick/github-tag-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Save version to file
        run: |
          echo -e "${{ steps.new_tag.outputs.new_tag }}" > VERSION
          cat VERSION

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build and publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*

  docker-publish:
    needs: python-publish
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@master

      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: niccolum/py_parse_sber
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          snapshot: true
          dockerfile: docker/Dockerfile